I"g<h2 id="콜백-함수">콜백 함수</h2>

<hr />

<p>호출한 함수 f안에서 특정 콜백 함수를 실행시켜서 그 콜백 함수에 제어권을 부여할 수 있다.</p>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">f</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span> <span class="p">...);</span>
<span class="p">...</span>
<span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">callback</span><span class="p">,</span> <span class="p">...)</span> <span class="p">{</span>
	<span class="p">...</span>
	<span class="nx">callback</span><span class="p">();</span>
	<span class="p">...</span>
<span class="p">}</span>
</code></pre></div></div>

<p>콜백 함수는 함수를 호출할 때 무언가 새로운 일이 생기거나 그 함수의 실행이 끝나면 지정한 콜백 함수를 실행해 주도록 함수에 요청해야 할 때 사용한다. 이때 콜백 함수의 주체는 함수를 호출한 호출자이다. 호출된 함수는 콜백 함수를 실행하지만 그 콜백 함수가 작업하는 내용에는 관여하지 않는다.</p>

<h2 id="이벤트-처리기">이벤트 처리기</h2>

<hr />

<p>이벤트 처리기는 특정 이벤트가 발생했을 때 실행하도록 등록하는 함수이다.</p>

<p><code class="language-plaintext highlighter-rouge">button.onclick = function() {...};</code></p>

<p>이는 함수를 호출할 때 무언가 사건이 발생하면 콜백 함수를 실행하도록 인수로 넘기는 행위와 닮았다.</p>

<p><code class="language-plaintext highlighter-rouge">button.addEventListener("click", function() {...}, false);</code></p>

<h2 id="타이머">타이머</h2>

<hr />

<p><code class="language-plaintext highlighter-rouge">setInterval(function() {...}, 2000);</code></p>
:ET